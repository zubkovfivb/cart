1 - Написать функцию getUnique(arr), которая принимает аргументом массив или массивоподоный объект, и возвращает массив уникальных элементов. Аргумент не должен изменяться. Порядок элементов результирующего массива должен совпадать с порядком, в котором они встречаются в оригинальной структуре.

2 - Написать функцию createCachable(func), принимающую аргументом функцию. createCachable(func) возвращает новую функцию, которая возвращает результат вызова func и запоминает его, или возвращает уже запомненный результат для текущего аргумента. Функция func может иметь только один аргумент. createCachable(func) может создавать какое угодно количество кешированных версий функций. 

3 - Написать функцию createKeeper(), которая возвращает объект с 2 методами put(key, value) и get(key). Метод get(key) должен возвращать данные, которые были сохранены с помощью метода put, если вызывается с тем-же значением key, что и put.
	Ключами могут быть как объекты, так и примитивы, про NaN не задумываться.
	Если put был вызван с таким ключом, с которым уже был вызван ранее, старое значение перезатирается новым.
	Доступ к ключам и значениями должен быть возможен только через методы put и get. 

4 - Написать функцию createSummator(initialValue), с опциональным первым параметром, который является точкой отчета счетчика. Если аргумент initialValue не передан, то отчет начинается с 0. При каждом вызове функция возвращает объект с методами inc(num), dec(num), get(). Объектов, которые возвращает функция createSummator(initialValue), может быть любое количество.
	Реализация должна позволять манипуляции со значением счетчика только с использованием этих методов.
    		Вызов метода inc(num) увеличивает значение счетчика на значение аргумента num. Если метод вызван без аргумента, то значение счетчика увеличивается на 1
    		Вызов метода dec(num) уменьшает значение счетчика на значение num, если метод вызван с аргументом. Если метод вызван без аргумента, то значение счетчика уменьшается на 1
    		Вызов метода get() возвращает текущее значение счетчика.
5 - Следующий код создает массив функций-стрелков shooters. По замыслу, каждый стрелок должен выводить свой номер:

   
	function makeArmy() {
 
  		var shooters = [];
 
  		for(var i=0; i<10; i++) {
    			var shooter = function() { // функция-стрелок
      				alert(i); // выводит свой номер
    			};
    			shooters.push(shooter);
  		}
  		return shooters;
	}
 
	var army = makeArmy();
 
	army[0](); // стрелок выводит 10, а должен 0
	army[5](); // стрелок выводит 10...
	// .. все стрелки выводят 10 вместо 0,1,2...9

	Почему все стрелки? выводят одно и то же? Поправьте код, чтобы стрелки работали как задумано. Предложите несколько вариантов исправления.